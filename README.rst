######################################
Yet another LTSV Manipulator for Scala
######################################

.. image:: https://secure.travis-ci.org/masahitojp/yet-another-ltsv-scala.png?branch=master

.. image:: https://drone.io/github.com/masahitojp/yet-another-ltsv-scala/status.png

:Original: https://github.com/seratch/ltsv4s/

This library is inspired by

* https://metacpan.org/module/Text::LTSV.
* https://github.com/making/ltsv4j

What's LTSV
===========

http://ltsv.org/


How to try
==========

Easy try

::

    $ git clone git@github.com:masahitojp/yet-another-ltsv-scala.git ltsv
    $ cd ltsv
    $ sbt console

How to test
===========

To test it use SBT invoke: 'sbt test'


Synopsis
========

::

    import me.masahito.ltsv.LTSV

    val result = LTSV().parseLine("hoge:foo\tbar:baz")
    result.right.map(m => {
        println(m("hoge")) // "hoo"
        println(m("bar"))    // "baz"
    })

    val data = LTSV().parseFile("./src/test/resources/test.ltsv")
    data.right.map(m => {
        assert(m.first("a") == "1",  "a")
        assert(m.first("b") == "2",  "b")
    })
     
    # Iterator interface
    LTSV().parseFilIter("./src/test/resources/test.ltsv"){ f =>
        for(result <- f) {
            ...
        }
    }

    val ltsvString = "hoge:foo\tbar:baz"
    // Parse line with wants.
    LTSV().wants("bar").parseLine(ltsvString).right.map(
      result => {
        assert(result.size === 1)
        assert( result("bar") === "baz")
        assert( result.get("hoge") === None)
      }
    )

    // Parse line with ignores.
    LTSV().ignores("bar").parseLine(ltsvString).right.map(
      result => {
        assert(result.size === 1)
        assert( result("hoge") === "foo")
        assert( result.get("bar") === None)
      }
    )

Incompatibilities with Original
===============================

- add wants/ignores/parseFile/parseFileIter method(inspired by Text::LTSV)
- The instance of a class is generated by a companion object. 
- return Either[IllegalArgumentException, List[Map[String, String]]]

Prerequisites
=============

* JDK6+
* Scala 2.9.2 or  2.10.0

License
=======

Licensed under the Apache License, Version 2.0.